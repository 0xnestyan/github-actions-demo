name: Version Bump and Release
on:
  push:
    branches:
      - main  # Trigger on push to main
  workflow_dispatch:  # Allow manual triggering
jobs:
  bump_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to read previous tags

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 || echo "v.0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Calculate new version
        id: calculate_version
        run: |
          latest_tag="${{ env.LATEST_TAG }}"
          IFS='.' read -ra PARTS <<< "${latest_tag#v.}"
          major=${PARTS[0]}
          minor=${PARTS[1]}
          patch=${PARTS[2]:-0}
          # Bump minor version (modify as needed)
          minor=$((minor + 1))
          new_version="v.${major}.${minor}.0"
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
          echo "New version: $new_version"

      - name: Generate release notes from commits
        id: generate_release_notes
        run: |
          latest_tag="${{ env.LATEST_TAG }}"
          if [ "$latest_tag" = "v.0.0.0" ]; then
            # If no previous tag exists, use all commits
            commits=$(git log --pretty=format:"%h %s by %an in #%d" | sed 's/, / /g')
          else
            # Get commits since the latest tag
            commits=$(git log $latest_tag..HEAD --pretty=format:"%h %s by %an in #%d" | sed 's/, / /g')
          fi
          # Count the number of commits
          commit_count=$(echo "$commits" | wc -l)
          # Format the commits into a markdown list
          formatted_commits=$(echo "$commits" | awk '{print "- " $0}')
          # Get the current date and calculate the days since the latest tag
          current_date=$(date +%s)
          if [ "$latest_tag" != "v.0.0.0" ]; then
            tag_date=$(git log -1 --format=%at $latest_tag)
            days_since_release=$(( (current_date - tag_date) / 86400 ))
          else
            days_since_release=0
          fi
          # Prepare the release body
          release_body="v.${{ env.NEW_VERSION#v. }} Latest\n\n"
          release_body+="@the-core-bot the-core-bot released this $days_since_release days ago\n"
          release_body+="Â· $commit_count commits to development since this release\n"
          release_body+=" ${{ env.NEW_VERSION#v. }}\n"
          release_body+=" $(git rev-parse --short HEAD)\n"
          release_body+="## What's Changed\n$formatted_commits\n"
          release_body+="Full Changelog: $latest_tag...${{ env.NEW_VERSION}}"
          echo "RELEASE_BODY=$release_body" >> $GITHUB_ENV

      - name: Create new tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: ${{ env.NEW_VERSION }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false